#!/bin/bash

set -e

function generate_dojofile1() {
    img=$1
    echo "DOJO_DOCKER_OPTIONS=\"--entrypoint=/bin/bash\"" > ./Dojofile.to_be_tested_scripts
    echo "DOJO_IDENTITY_OUTER=\"$(pwd)/test/test-files/dojo_identities/full\"" >> ./Dojofile.to_be_tested_scripts
    echo "DOJO_WORK_OUTER=$(pwd)/test/test-files/dojo_work" >> Dojofile.to_be_tested_scripts
    echo "DOJO_DOCKER_IMAGE=${img}" >> Dojofile.to_be_tested_scripts
    echo "Testing image: ${img}"
}
function generate_dojofile2() {
    img=$1
    echo "DOJO_IDENTITY_OUTER=\"$(pwd)/test/test-files/dojo_identities/full\"" > ./Dojofile.to_be_tested
    echo "DOJO_WORK_OUTER=$(pwd)/test/test-files/dojo_work" >> Dojofile.to_be_tested
    echo "DOJO_DOCKER_IMAGE=${img}" >> Dojofile.to_be_tested
    echo "Testing image: ${img}"
}

command="$1"
case "${command}" in
  build)
      # this is needed to run itest
      docker build -f DockerfileAlpine -t dojo-image-scripts:alpine .
      docker build -f DockerfileUbuntu -t dojo-image-scripts:ubuntu .
      exit $?
      ;;
  test_scripts)
      # do not use the production ENTRYPOINT
      generate_dojofile1 "dojo-image-scripts:alpine"
      bats "$(pwd)/test/scripts/bats"
      generate_dojofile1 "dojo-image-scripts:ubuntu"
      bats "$(pwd)/test/scripts/bats"
      exit $?
      ;;
  e2e)
      # use the production ENTRYPOINT
      generate_dojofile2 "dojo-image-scripts:alpine"
      bats "$(pwd)/test/e2e/bats"
      generate_dojofile2 "dojo-image-scripts:ubuntu"
      bats "$(pwd)/test/e2e/bats"
      exit $?
      ;;
  install_bats)
      # you may need sudo/root privileges
      BATS_CORE_VERSION=1.2.1
      cd /tmp && git clone --depth 1 -b v${BATS_CORE_VERSION} https://github.com/bats-core/bats-core.git
      cd bats-core && ./install.sh /opt
      cd .. && rm -r bats-core
      ln -s /opt/bin/bats /usr/bin/bats

      BATS_SUPPORT_VERSION=004e707638eedd62e0481e8cdc9223ad471f12ee
      git clone https://github.com/ztombol/bats-support.git /opt/bats-support
      cd /opt/bats-support && git reset --hard ${BATS_SUPPORT_VERSION}

      BATS_ASSERT_VERSION=9f88b4207da750093baabc4e3f41bf68f0dd3630
      git clone https://github.com/ztombol/bats-assert.git /opt/bats-assert
      cd  /opt/bats-assert && git reset --hard ${BATS_ASSERT_VERSION}
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
